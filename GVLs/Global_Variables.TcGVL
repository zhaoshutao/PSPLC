<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <GVL Name="Global_Variables" Id="{bcaa4f18-97b1-4818-bac8-1835e8da9e31}">
    <Declaration><![CDATA[//{attribute 'Tc2GvlVarNames'}
VAR_GLOBAL
(*IDControl Ready*)
	IDControlReady:BOOL;
(*Error Massage*)
	Error:BOOL;
	ErrorID:DINT;
	ErrorDescription:STRING;
(*加载配方参数*)
	LoadRecipeParameters:BOOL;
	loadParametersDone:BOOL;
(*设置光栅bias done *)	
	PositionBiasDone:BOOL;
(*回程差*)
	HysteresisError:LREAL;
(*Drive Status*)
	DriveStatus:DINT;//1:Drive Ready;2:Axis is in operation;0:Others
(*光栅漂移误差阈值*)
	LEDriftErrorThreshold:LREAL:=0.001;
(*Lag Distance threshold*)
	PosDiff_PhaseShifterLin:LREAL:=0.5;

(*Compensation Value*)
	M_Compensation:ARRAY[1..18] OF Struct_M_Compensation
:=[
(Gap:=0,		PhaseShifterLin:=0,		InRange:=FALSE),
(Gap:=60,		PhaseShifterLin:=60,	InRange:=FALSE),
(Gap:=68,		PhaseShifterLin:=68,	InRange:=FALSE),
(Gap:=70,		PhaseShifterLin:=70,	InRange:=FALSE),
(Gap:=80,		PhaseShifterLin:=80,	InRange:=FALSE),
(Gap:=90,		PhaseShifterLin:=90,	InRange:=FALSE),
(Gap:=100,		PhaseShifterLin:=100,	InRange:=FALSE),
(Gap:=120,		PhaseShifterLin:=120,	InRange:=FALSE),
(Gap:=140,		PhaseShifterLin:=140,	InRange:=FALSE),
(Gap:=160,		PhaseShifterLin:=160,	InRange:=FALSE),
(Gap:=170,		PhaseShifterLin:=170,	InRange:=FALSE),
(Gap:=180,		PhaseShifterLin:=180,	InRange:=FALSE),
(Gap:=190,		PhaseShifterLin:=190,	InRange:=FALSE),
(Gap:=200,		PhaseShifterLin:=200,	InRange:=FALSE),
(Gap:=210,		PhaseShifterLin:=210,	InRange:=FALSE),
(Gap:=220,		PhaseShifterLin:=220,	InRange:=FALSE),
(Gap:=230,		PhaseShifterLin:=230,	InRange:=FALSE),
(Gap:=3000.001,	PhaseShifterLin:=3000.001,	InRange:=FALSE)];

(*simulation OR NOT*)
	simulation:BOOL;
(*USELinearEncoeder*)
	USELinearEncoder:BOOL:=TRUE;
(*restartTwinCAT*)
	m_restartTC:BOOL;
(*Plc_EmergencyStop *)
	Plc_EmergencyStop  AT %Q*:BOOL:=TRUE;
(*硬急停*)
	Hardware_EmergencyStop :BOOL:=TRUE;
(*LED*)
	Led_Run  AT %Q*:BOOL;
	Led_Error  AT %Q*:BOOL;
(*LimitSwitch*)
	LS_TopFar  :BOOL;
	LS_TopNear  :BOOL;
	LS_BottomFar  :BOOL;
	LS_BottomNear  :BOOL;
	Unreach_LS_Far:BOOL;
	Unreach_LS_Near:BOOL;
(*kill switch*)
	KS_TopFar_Contact1:BOOL;
	KS_TopFar_Contact2:BOOL;
	KS_TopNear_Contact1:BOOL;
	KS_TopNear_Contact2:BOOL;
	KS_BottomFar_Contact1:BOOL;
	KS_BottomFar_Contact2:BOOL;
	KS_BottomNear_Contact1:BOOL;
	KS_BottomNear_Contact2:BOOL;
	
(*E-STOP*)
	KS_CabinetEmergency_contact1:BOOL;
	KS_CabinetEmergency_contact2:BOOL;
	KS_handEmergency1_Contact1:BOOL;
	KS_handEmergency1_Contact2:BOOL;
	KS_handEmergency2_Contact1:BOOL;
	KS_handEmergency2_Contact2:BOOL;
	KS_softEmergency2_Contact:BOOL;
(*aixs_ref*)
	PhaseShifterLin: axis_ref;
(*axis Position*)
	Pos_PhaseShifterLin: LREAL;
(*********)
	LB_TestRecord:LREAL;
	RB_TestRecord:LREAL;
(*axis Velocity*)
	Velo_PhaseShifterLin: LREAL;
(*Lag Distance*)
	PosDiff_PhaseShifterLin_actual: LREAL;

(***********************Power status and couple statatus***********************)
	st_Power:BOOL;
(************************FB***********************)
	FB_Power:FB_Power;
	FB_PlcEmergencyStop: FB_PlcEmergencyStop;
	FB_Move:FB_Move;
	FB_Stop:FB_Stop;
(********************²¹³¥GapÄ£Ê½£¬µ¥Öá²¹³¥Êý¾Ý************************)
	(*ÊÇ·ñ²¹³¥*)
	USE_SingleAxis_Compensation:BOOL:=TRUE;

	M_CompensationNumber:INT;
	M_DisplayNumber:INT;
	(*Conpensation Position Target*)
	PhaseShifterLinPositionNew:LREAL;

	(*考虑到回程差后，运动到临时位置*)
	PhaseShifterLinPositionNew_temporary :LREAL;
	(*Display Position*)
	PhaseShifterLinPositionDisplay:LREAL;
	(*Display Velocity*)
	PhaseShifterLinVelocityDisplay:LREAL;
	

(******RS232************)
	RxBufferEL			: ComBuffer;	(* Receive data buffer; used with all receive function blocks *)
	TxBufferEL			: ComBuffer;	(* Transmit data buffer; used with all receive function blocks *)

END_VAR

]]></Declaration>
  </GVL>
</TcPlcObject>